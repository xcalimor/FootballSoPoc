// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlayerResourceAccess;

namespace PlayerResourceAccess.Migrations
{
    [DbContext(typeof(ResourceContext))]
    [Migration("20201024152027_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PlayerResourceAccess.Entity.GoalStatsDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("At")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ForTeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GameTime")
                        .HasColumnType("int");

                    b.Property<bool>("GoalMadeNotSaved")
                        .HasColumnType("bit");

                    b.Property<Guid>("InLeagueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("GoalStatsDetails");
                });

            modelBuilder.Entity("PlayerResourceAccess.Entity.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("Deffensive")
                        .HasColumnType("int");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GameIQ")
                        .HasColumnType("int");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Offensive")
                        .HasColumnType("int");

                    b.Property<int>("Reaction")
                        .HasColumnType("int");

                    b.Property<int>("Stamina")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("PlayerResourceAccess.Entity.PlayerAggregatedStats", b =>
                {
                    b.Property<Guid>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Assists")
                        .HasColumnType("int");

                    b.Property<int>("GamesPlayed")
                        .HasColumnType("int");

                    b.Property<int>("GoalsMade")
                        .HasColumnType("int");

                    b.Property<int>("GoalsSaved")
                        .HasColumnType("int");

                    b.Property<int>("MinutesPlayed")
                        .HasColumnType("int");

                    b.Property<Guid?>("PlayertId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlayerId");

                    b.HasIndex("PlayertId")
                        .IsUnique()
                        .HasFilter("[PlayertId] IS NOT NULL");

                    b.ToTable("PlayerAggregatedStats");
                });

            modelBuilder.Entity("PlayerResourceAccess.Entity.GoalStatsDetail", b =>
                {
                    b.HasOne("PlayerResourceAccess.Entity.Player", null)
                        .WithMany("GoalStatDetails")
                        .HasForeignKey("PlayerId");
                });

            modelBuilder.Entity("PlayerResourceAccess.Entity.PlayerAggregatedStats", b =>
                {
                    b.HasOne("PlayerResourceAccess.Entity.Player", "Player")
                        .WithOne("Stats")
                        .HasForeignKey("PlayerResourceAccess.Entity.PlayerAggregatedStats", "PlayertId");
                });
#pragma warning restore 612, 618
        }
    }
}
