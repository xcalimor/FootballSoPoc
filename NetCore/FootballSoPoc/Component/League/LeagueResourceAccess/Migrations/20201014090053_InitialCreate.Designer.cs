// <auto-generated />
using System;
using LeagueResourceAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LeagueResourceAccess.Migrations
{
    [DbContext(typeof(ResourceContext))]
    [Migration("20201014090053_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LeagueResourceAccess.Entity.GameDay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AwayLeagueTeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HomeLeagueTeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LeagueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SheduledAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LeagueId");

                    b.ToTable("GameDays");
                });

            modelBuilder.Entity("LeagueResourceAccess.Entity.League", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LeagueTemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LeagueTemplateId");

                    b.ToTable("Leagues");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0614a1e6-6ecd-42b7-b5c9-0ac09debcd18"),
                            LeagueTemplateId = new Guid("3e40dce2-5e92-400f-b375-5361300f9971"),
                            Name = "Premieer League"
                        },
                        new
                        {
                            Id = new Guid("72a33c26-8971-44fc-b8ad-4630c68450be"),
                            LeagueTemplateId = new Guid("d9ef7eb8-b626-44fe-8326-ce84c7dcd34d"),
                            Name = "FA Cup"
                        });
                });

            modelBuilder.Entity("LeagueResourceAccess.Entity.LeagueTeam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LeagueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TeamName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LeagueId");

                    b.ToTable("LeagueTeams");

                    b.HasData(
                        new
                        {
                            Id = new Guid("762a2484-1555-48f0-989b-8221e5e6c02a"),
                            LeagueId = new Guid("0614a1e6-6ecd-42b7-b5c9-0ac09debcd18"),
                            Rank = 1,
                            TeamId = new Guid("b3eb0f55-a4ff-48ab-8dee-4e30b14a343b")
                        },
                        new
                        {
                            Id = new Guid("5f11f18d-12ac-46a1-9ff8-042ff9e01882"),
                            LeagueId = new Guid("0614a1e6-6ecd-42b7-b5c9-0ac09debcd18"),
                            Rank = 2,
                            TeamId = new Guid("44fd01e1-e710-4ad2-8cd2-a0ea823e9182")
                        },
                        new
                        {
                            Id = new Guid("aa6dc508-4408-4432-b23a-4aab184fa3ae"),
                            LeagueId = new Guid("0614a1e6-6ecd-42b7-b5c9-0ac09debcd18"),
                            Rank = 3,
                            TeamId = new Guid("85e6f2d2-4eb0-4da6-95be-7a4a19621ba0")
                        },
                        new
                        {
                            Id = new Guid("716994b1-0b6f-4d24-98b2-2be692ce0eb9"),
                            LeagueId = new Guid("0614a1e6-6ecd-42b7-b5c9-0ac09debcd18"),
                            Rank = 4,
                            TeamId = new Guid("d6710993-c447-4732-8f8a-d1b708da4612")
                        },
                        new
                        {
                            Id = new Guid("89e4e0c2-899f-4373-b49f-0e52d8404dd6"),
                            LeagueId = new Guid("0614a1e6-6ecd-42b7-b5c9-0ac09debcd18"),
                            Rank = 5,
                            TeamId = new Guid("b3228a56-6321-4aa3-9db0-8d0c76a61b5c")
                        },
                        new
                        {
                            Id = new Guid("506b3383-74ea-4638-802e-50e6954dbeea"),
                            LeagueId = new Guid("0614a1e6-6ecd-42b7-b5c9-0ac09debcd18"),
                            Rank = 6,
                            TeamId = new Guid("9e52c0c7-6dda-492e-9de6-54e1a89f3e73")
                        },
                        new
                        {
                            Id = new Guid("2e02733f-1c59-479e-9c23-89a5ddb546d6"),
                            LeagueId = new Guid("0614a1e6-6ecd-42b7-b5c9-0ac09debcd18"),
                            Rank = 7,
                            TeamId = new Guid("3ce501b8-595c-44a9-b21e-5bb9cea9d1e0")
                        },
                        new
                        {
                            Id = new Guid("c8b96505-c40d-46b6-8848-3de7b21f7370"),
                            LeagueId = new Guid("0614a1e6-6ecd-42b7-b5c9-0ac09debcd18"),
                            Rank = 8,
                            TeamId = new Guid("63d13457-c1a2-4724-8cce-da80c2abb707")
                        },
                        new
                        {
                            Id = new Guid("71ee929f-090d-4502-ac68-207fd93b919c"),
                            LeagueId = new Guid("0614a1e6-6ecd-42b7-b5c9-0ac09debcd18"),
                            Rank = 9,
                            TeamId = new Guid("64423823-57b4-4599-8ad3-c7f8db3954a3")
                        },
                        new
                        {
                            Id = new Guid("a6266148-34cf-495a-8a51-5c8b06e891b4"),
                            LeagueId = new Guid("0614a1e6-6ecd-42b7-b5c9-0ac09debcd18"),
                            Rank = 10,
                            TeamId = new Guid("f6082b09-709a-4555-ad1e-150bc8c52b87")
                        },
                        new
                        {
                            Id = new Guid("c1247494-da7e-4048-b57d-69b999262a7d"),
                            LeagueId = new Guid("0614a1e6-6ecd-42b7-b5c9-0ac09debcd18"),
                            Rank = 11,
                            TeamId = new Guid("7719eb1f-028a-42ef-80e8-815f2b228ac4")
                        },
                        new
                        {
                            Id = new Guid("1e6c23fe-bf21-4971-a7fd-2e071e3b8f98"),
                            LeagueId = new Guid("0614a1e6-6ecd-42b7-b5c9-0ac09debcd18"),
                            Rank = 12,
                            TeamId = new Guid("77b36b59-f481-4e46-9765-a577617c287b")
                        },
                        new
                        {
                            Id = new Guid("9b81fa58-e7a8-4db7-baa1-0bb8b21ce809"),
                            LeagueId = new Guid("0614a1e6-6ecd-42b7-b5c9-0ac09debcd18"),
                            Rank = 13,
                            TeamId = new Guid("55d9d4b5-5bb7-4c94-8cba-d92e3ed5f770")
                        },
                        new
                        {
                            Id = new Guid("f099df15-ff4e-4ce8-8ceb-190a90ede6e7"),
                            LeagueId = new Guid("72a33c26-8971-44fc-b8ad-4630c68450be"),
                            Rank = 1,
                            TeamId = new Guid("bc01ef2b-3a08-40a8-b9d5-88d6a6d912ca")
                        },
                        new
                        {
                            Id = new Guid("f82a92aa-6e4e-4dea-ae7e-7f8f66b62b57"),
                            LeagueId = new Guid("72a33c26-8971-44fc-b8ad-4630c68450be"),
                            Rank = 2,
                            TeamId = new Guid("fa24121f-ef5a-41d8-b773-4a018be9ec3c")
                        },
                        new
                        {
                            Id = new Guid("e3771587-afc5-47a6-a221-601921c46508"),
                            LeagueId = new Guid("72a33c26-8971-44fc-b8ad-4630c68450be"),
                            Rank = 3,
                            TeamId = new Guid("8cd59e7d-56f1-45ed-aad6-89e890a1e96b")
                        },
                        new
                        {
                            Id = new Guid("dba48d58-8d0b-4bc3-ab8c-b57c0460fcc5"),
                            LeagueId = new Guid("72a33c26-8971-44fc-b8ad-4630c68450be"),
                            Rank = 4,
                            TeamId = new Guid("5a39f299-fab8-49dc-993e-11783c8f6fd1")
                        },
                        new
                        {
                            Id = new Guid("30eb407c-630b-46e0-98cd-6ac5769c6108"),
                            LeagueId = new Guid("72a33c26-8971-44fc-b8ad-4630c68450be"),
                            Rank = 5,
                            TeamId = new Guid("c685b729-8d38-4bc2-bc81-82e7553c80f7")
                        },
                        new
                        {
                            Id = new Guid("d9508012-e7db-4b20-978a-369a1657e52b"),
                            LeagueId = new Guid("72a33c26-8971-44fc-b8ad-4630c68450be"),
                            Rank = 6,
                            TeamId = new Guid("72d3b148-bd7c-47bc-ad81-ee955f1f9b9c")
                        },
                        new
                        {
                            Id = new Guid("f1daadac-3b1e-428a-8839-b591713b3012"),
                            LeagueId = new Guid("72a33c26-8971-44fc-b8ad-4630c68450be"),
                            Rank = 7,
                            TeamId = new Guid("49616e17-beaa-40ae-899f-8216a7aec410")
                        },
                        new
                        {
                            Id = new Guid("dd27e728-6708-4490-b47d-dab9fc0a20fc"),
                            LeagueId = new Guid("72a33c26-8971-44fc-b8ad-4630c68450be"),
                            Rank = 8,
                            TeamId = new Guid("4fe12e9b-8f15-451a-a791-1d1ff7e83284")
                        },
                        new
                        {
                            Id = new Guid("cdd5a09e-467d-4619-bcb6-e9affcbf79c7"),
                            LeagueId = new Guid("72a33c26-8971-44fc-b8ad-4630c68450be"),
                            Rank = 9,
                            TeamId = new Guid("01705f56-9630-4cb0-96d1-3c47e5d82e68")
                        },
                        new
                        {
                            Id = new Guid("825b4833-2a3b-4159-ab52-975e579e025b"),
                            LeagueId = new Guid("72a33c26-8971-44fc-b8ad-4630c68450be"),
                            Rank = 10,
                            TeamId = new Guid("3bde4063-3317-4163-b9ce-21a36f548ea3")
                        });
                });

            modelBuilder.Entity("LeagueResourceAccess.Entity.LeagueTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsEliminiatingCup")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PointsOnDraw")
                        .HasColumnType("int");

                    b.Property<int>("PointsOnWin")
                        .HasColumnType("int");

                    b.Property<int>("TimesPlayingEachOther")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LeagueTemplate");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d9ef7eb8-b626-44fe-8326-ce84c7dcd34d"),
                            IsEliminiatingCup = true,
                            Name = "Cup template",
                            PointsOnDraw = 0,
                            PointsOnWin = 0,
                            TimesPlayingEachOther = 0
                        },
                        new
                        {
                            Id = new Guid("3e40dce2-5e92-400f-b375-5361300f9971"),
                            IsEliminiatingCup = false,
                            Name = "Series template",
                            PointsOnDraw = 1,
                            PointsOnWin = 3,
                            TimesPlayingEachOther = 2
                        });
                });

            modelBuilder.Entity("LeagueResourceAccess.Entity.Scorer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssistedByLeaguePlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameDayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ScoredInMinute")
                        .HasColumnType("int");

                    b.Property<Guid?>("ScorerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GameDayId");

                    b.HasIndex("ScorerId");

                    b.ToTable("Scorers");
                });

            modelBuilder.Entity("LeagueResourceAccess.Entity.Standing", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AwayGames")
                        .HasColumnType("int");

                    b.Property<int>("AwayWins")
                        .HasColumnType("int");

                    b.Property<int>("Draw")
                        .HasColumnType("int");

                    b.Property<int>("GoalsAgainst")
                        .HasColumnType("int");

                    b.Property<int>("GoalsMade")
                        .HasColumnType("int");

                    b.Property<int>("HomeGames")
                        .HasColumnType("int");

                    b.Property<int>("HomeWins")
                        .HasColumnType("int");

                    b.Property<Guid>("LeagueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LeagueTeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LeagueId");

                    b.ToTable("Standings");
                });

            modelBuilder.Entity("LeagueResourceAccess.Entity.GameDay", b =>
                {
                    b.HasOne("LeagueResourceAccess.Entity.League", null)
                        .WithMany("GameDays")
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LeagueResourceAccess.Entity.League", b =>
                {
                    b.HasOne("LeagueResourceAccess.Entity.LeagueTemplate", "LeagueTemplate")
                        .WithMany()
                        .HasForeignKey("LeagueTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LeagueResourceAccess.Entity.LeagueTeam", b =>
                {
                    b.HasOne("LeagueResourceAccess.Entity.League", null)
                        .WithMany("LeagueTeams")
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LeagueResourceAccess.Entity.Scorer", b =>
                {
                    b.HasOne("LeagueResourceAccess.Entity.GameDay", null)
                        .WithMany("HomeScorers")
                        .HasForeignKey("GameDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LeagueResourceAccess.Entity.GameDay", null)
                        .WithMany("AwayScorers")
                        .HasForeignKey("ScorerId");
                });

            modelBuilder.Entity("LeagueResourceAccess.Entity.Standing", b =>
                {
                    b.HasOne("LeagueResourceAccess.Entity.League", null)
                        .WithMany("Standings")
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
